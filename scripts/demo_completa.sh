#!/bin/bash
# Script de demostraci√≥n completa - Mini Gestor de Proyectos API
# Demuestra todos los conceptos: ACID, Escalabilidad, Contenedores, Componentes

echo "üöÄ INICIANDO DEMOSTRACI√ìN COMPLETA - MINI GESTOR DE PROYECTOS API"
echo "=================================================================="

# URL base de la API
API_BASE="http://localhost:8000/api/v1"

# Funci√≥n para hacer peticiones con manejo de errores
make_request() {
    local method=$1
    local url=$2
    local data=$3
    local description=$4
    
    echo ""
    echo "üìå $description"
    echo "-----------------------------------"
    echo "üîÑ $method $url"
    
    if [ -n "$data" ]; then
        echo "üì§ Datos: $data"
        response=$(curl -s -X $method -H "Content-Type: application/json" -d "$data" "$url")
    else
        response=$(curl -s -X $method "$url")
    fi
    
    echo "üì• Respuesta:"
    echo "$response" | python3 -m json.tool 2>/dev/null || echo "$response"
    
    # Extraer ID si existe (para uso posterior)
    if echo "$response" | grep -q '"id"'; then
        echo "$response" | python3 -c "import sys, json; print('ID extra√≠do:', json.load(sys.stdin)['id'])" 2>/dev/null
    fi
}

echo ""
echo "üè• 1. VERIFICACI√ìN DE ESTADO DE LA API"
echo "======================================"
make_request "GET" "http://localhost:8000/" "" "Estado general de la API"
make_request "GET" "http://localhost:8000/health" "" "Health check para contenedores"

echo ""
echo "üë• 2. DEMOSTRACI√ìN GESTOR USUARIOS (Componente Modular)"
echo "======================================================="

# Crear usuarios
make_request "POST" "$API_BASE/usuarios" '{
    "nombre": "Ana Garc√≠a",
    "email": "ana.garcia@empresa.com",
    "rol": "manager"
}' "Crear usuario manager"

make_request "POST" "$API_BASE/usuarios" '{
    "nombre": "Carlos L√≥pez",
    "email": "carlos.lopez@empresa.com", 
    "rol": "desarrollador"
}' "Crear usuario desarrollador"

make_request "POST" "$API_BASE/usuarios" '{
    "nombre": "Mar√≠a Rodr√≠guez",
    "email": "maria.rodriguez@empresa.com",
    "rol": "desarrollador"
}' "Crear otro usuario desarrollador"

# Listar usuarios (demostrar paginaci√≥n para escalabilidad)
make_request "GET" "$API_BASE/usuarios" "" "Listar todos los usuarios"
make_request "GET" "$API_BASE/usuarios?limit=2" "" "Paginaci√≥n: primeros 2 usuarios"

# Obtener usuario espec√≠fico
make_request "GET" "$API_BASE/usuarios/1" "" "Obtener usuario por ID"

# Actualizar usuario (demostrar transacciones ACID)
make_request "PUT" "$API_BASE/usuarios/1" '{
    "rol": "admin"
}' "Actualizar rol de usuario (transacci√≥n ACID)"

echo ""
echo "üìã 3. DEMOSTRACI√ìN GESTOR PROYECTOS (Interfaces Claras)"
echo "======================================================="

# Crear proyectos
make_request "POST" "$API_BASE/proyectos" '{
    "nombre": "Sistema de Inventario",
    "descripcion": "Desarrollo de sistema web para gesti√≥n de inventario",
    "estado": "activo"
}' "Crear proyecto de inventario"

make_request "POST" "$API_BASE/proyectos" '{
    "nombre": "App Mobile E-commerce", 
    "descripcion": "Aplicaci√≥n m√≥vil para comercio electr√≥nico",
    "estado": "activo"
}' "Crear proyecto mobile"

# Listar proyectos
make_request "GET" "$API_BASE/proyectos" "" "Listar todos los proyectos"

# Asignar usuarios a proyectos (demostrar validaci√≥n cruzada)
make_request "POST" "$API_BASE/proyectos/1/asignar_usuario" '{
    "usuario_id": 1
}' "Asignar Ana (manager) al proyecto de inventario"

make_request "POST" "$API_BASE/proyectos/1/asignar_usuario" '{
    "usuario_id": 2
}' "Asignar Carlos (dev) al proyecto de inventario"

make_request "POST" "$API_BASE/proyectos/2/asignar_usuario" '{
    "usuario_id": 3
}' "Asignar Mar√≠a (dev) al proyecto mobile"

# Verificar asignaciones
make_request "GET" "$API_BASE/proyectos/1" "" "Ver proyecto 1 con usuarios asignados"

echo ""
echo "‚úÖ 4. DEMOSTRACI√ìN GESTOR TAREAS (Servicios Sin Estado)"
echo "======================================================="

# Crear tareas
make_request "POST" "$API_BASE/tareas" '{
    "titulo": "Dise√±ar base de datos",
    "descripcion": "Crear esquema de BD para inventario",
    "estado": "pendiente",
    "prioridad": "alta",
    "proyecto_id": 1
}' "Crear tarea de dise√±o BD"

make_request "POST" "$API_BASE/tareas" '{
    "titulo": "Implementar API REST",
    "descripcion": "Desarrollar endpoints principales",
    "estado": "pendiente", 
    "prioridad": "alta",
    "proyecto_id": 1
}' "Crear tarea de API"

make_request "POST" "$API_BASE/tareas" '{
    "titulo": "Dise√±ar UI/UX",
    "descripcion": "Crear mockups de la app mobile",
    "estado": "pendiente",
    "prioridad": "media",
    "proyecto_id": 2
}' "Crear tarea de dise√±o UI"

# Asignar responsables (demostrar validaci√≥n cruzada completa)
make_request "POST" "$API_BASE/tareas/1/asignar_usuario" '{
    "usuario_id": 2
}' "Asignar Carlos como responsable de dise√±o BD"

make_request "POST" "$API_BASE/tareas/2/asignar_usuario" '{
    "usuario_id": 2  
}' "Asignar Carlos como responsable de API"

# Listar tareas con filtros
make_request "GET" "$API_BASE/tareas" "" "Listar todas las tareas"
make_request "GET" "$API_BASE/tareas?proyecto_id=1" "" "Filtrar tareas del proyecto 1"
make_request "GET" "$API_BASE/tareas?usuario_responsable_id=2" "" "Filtrar tareas de Carlos"

echo ""
echo "üîç 5. DEMOSTRACI√ìN DE VALIDACIONES CRUZADAS"
echo "==========================================="

# Intentar asignar usuario inexistente a proyecto
make_request "POST" "$API_BASE/proyectos/1/asignar_usuario" '{
    "usuario_id": 999
}' "‚ùå Intentar asignar usuario inexistente (debe fallar)"

# Intentar crear tarea en proyecto inexistente
make_request "POST" "$API_BASE/tareas" '{
    "titulo": "Tarea inv√°lida",
    "proyecto_id": 999
}' "‚ùå Intentar crear tarea en proyecto inexistente (debe fallar)"

# Intentar asignar usuario no asignado al proyecto
make_request "POST" "$API_BASE/tareas/3/asignar_usuario" '{
    "usuario_id": 2
}' "‚ùå Intentar asignar Carlos a tarea del proyecto 2 (no est√° asignado)"

echo ""
echo "üíæ 6. DEMOSTRACI√ìN PROPIEDADES ACID"
echo "==================================="

# Actualizar m√∫ltiples campos en transacci√≥n
make_request "PUT" "$API_BASE/tareas/1" '{
    "estado": "en_progreso",
    "descripcion": "Crear esquema de BD para inventario - EN DESARROLLO"
}' "Actualizaci√≥n transaccional de tarea (ACID)"

# Intentar actualizar con email duplicado (debe fallar y hacer rollback)
make_request "POST" "$API_BASE/usuarios" '{
    "nombre": "Usuario Duplicado",
    "email": "ana.garcia@empresa.com"
}' "‚ùå Intentar crear usuario con email duplicado (rollback)"

echo ""
echo "üìà 7. DEMOSTRACI√ìN ESCALABILIDAD HORIZONTAL"
echo "=========================================="

echo "‚úÖ API Sin Estado (Stateless):"
echo "   - Cada request es independiente"
echo "   - No hay variables de sesi√≥n en memoria"
echo "   - Puede ejecutarse en m√∫ltiples instancias simult√°neamente"

make_request "GET" "$API_BASE/usuarios?limit=1&skip=0" "" "Request independiente 1"
make_request "GET" "$API_BASE/usuarios?limit=1&skip=1" "" "Request independiente 2"

echo ""
echo "üê≥ 8. VERIFICACI√ìN DE CONTENEDORES"
echo "=================================="

echo "‚úÖ Contenedores ejecut√°ndose:"
echo "   - API FastAPI: localhost:8000"
echo "   - PostgreSQL: localhost:5432" 
echo "   - Adminer: localhost:8080"

make_request "GET" "http://localhost:8000/health" "" "Health check de contenedor API"

echo ""  
echo "üèÅ DEMOSTRACI√ìN COMPLETADA"
echo "========================="
echo ""
echo "üìä RESUMEN DE CONCEPTOS DEMOSTRADOS:"
echo "‚úÖ Componentes modulares: GestorUsuarios, GestorProyectos, GestorTareas"
echo "‚úÖ Interfaces claras: APIs REST bien definidas"
echo "‚úÖ ACID: Transacciones, rollbacks, integridad referencial"
echo "‚úÖ Escalabilidad horizontal: API stateless, paginaci√≥n"
echo "‚úÖ Contenedores: Docker, networking, health checks"
echo "‚úÖ Validaciones cruzadas: Verificaci√≥n entre componentes"
echo ""
echo "üîó Enlaces √∫tiles:"
echo "   - Documentaci√≥n: http://localhost:8000/docs"
echo "   - ReDoc: http://localhost:8000/redoc"
echo "   - Adminer (BD): http://localhost:8080"
echo ""
echo "üéØ La demostraci√≥n ha finalizado exitosamente!"